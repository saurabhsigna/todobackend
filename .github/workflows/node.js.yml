# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  PORT: ${{secrets.PORT}}
  JWT_SECRET: ${{secrets.JWT_SECRET}}
  ACCESS_TOKEN_EXPIRESIN: ${{secrets.ACCESS_TOKEN_EXPIRESIN}}
  DATABASE_URL: ${{secrets.DATABASE_URL}}
  FRONTEND_URI: ${{secrets.FRONTEND_URI}}
  GOOGLE_CLIENT_ID: ${{secrets.GOOGLE_CLIENT_ID}}
  GOOGLE_CLIENT_SECRET: ${{secrets.GOOGLE_CLIENT_SECRET}}
  REFRESH_TOKEN_SECRET: ${{secrets.REFRESH_TOKEN_SECRET}}
  SESSION_SECRET: ${{secrets.SESSION_SECRET}}
jobs:
  build:

    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
   
          
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run:  |
           touch .env
           echo PORT=${PORT} >> .env
           echo JWT_SECRET=${JWT_SECRET} >> .env
           echo ACCESS_TOKEN_EXPIRESIN=${ACCESS_TOKEN_EXPIRESIN} >> .env
           echo DATABASE_URL=${DATABASE_URL} >> .env
           echo FRONTEND_URI=${FRONTEND_URI} >> .env
           echo GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID} >> .env
           echo GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET} >> .env
           echo REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET} >> .env
           echo SESSION_SECRET=${SESSION_SECRET} >> .env
           cat .env


    - name: Build project
      run: npm run build --if-present
    
    - name: Remove previous logs
      run: pm2 flush todobackend

    - name: Start PM2 server
      run: pm2 restart todobackend || echo "PM2 restart failed"

    - name: Check PM2 logs
      run: pm2 logs todobackend --nostream


      
    - name: Check server status
      run: |
          if ! curl --head --fail http://localhost:3005; then
            echo "Server is not running successfully. Rolling back..."
            # Your rollback commands here
            # For example: pm2 revert app
            exit 1
          fi
    
    
